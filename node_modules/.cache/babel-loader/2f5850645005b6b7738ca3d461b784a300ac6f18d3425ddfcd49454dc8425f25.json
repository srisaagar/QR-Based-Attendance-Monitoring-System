{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saira\\\\qr-attendance\\\\src\\\\components\\\\TeacherDashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { QRCodeCanvas } from 'qrcode.react';\n// import './TeacherDashboard.css';\n\n// const TeacherDashboard = () => {\n//   const [teacher, setTeacher] = useState({});\n//   const [sessionId, setSessionId] = useState(localStorage.getItem('activeSessionId') || null);\n//   const [form, setForm] = useState({ className: '', subject: '', hour: '', date: '' });\n//   const [students, setStudents] = useState([]);\n//   const [historySessions, setHistorySessions] = useState([]);\n//   const [expandedSession, setExpandedSession] = useState(null);\n//   const [manualStudent, setManualStudent] = useState({ name: '', rollNo: '' });\n//   const [localIP, setLocalIP] = useState('');\n//   const [qrValue, setQrValue] = useState('');\n\n//   const token = localStorage.getItem('teacherToken');\n\n//   const handleEndSession = () => {\n//     localStorage.removeItem('activeSessionId');\n//     setSessionId(null);\n//     setStudents([]);\n//     setQrValue('');\n//   };\n\n//   useEffect(() => {\n//     const fetchIP = async () => {\n//       try {\n//         const res = await axios.get('http://localhost:5000/api/utils/my-ip');\n//         setLocalIP(res.data.ip);\n//       } catch (err) {\n//         console.error('Failed to fetch IP:', err);\n//       }\n//     };\n//     fetchIP();\n//   }, []);\n\n//   useEffect(() => {\n//     // If there's a session ID in local storage on page load, set the initial QR value\n//     if (sessionId && localIP) {\n//         setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\n//     }\n//   }, [sessionId, localIP]);\n\n//   useEffect(() => {\n//     const fetchTeacher = async () => {\n//       if (!token) return;\n//       try {\n//         const res = await axios.get('http://localhost:5000/api/teachers/me', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setTeacher(res.data);\n//       } catch (err) {\n//         console.error('Failed to fetch teacher:', err);\n//       }\n//     };\n//     fetchTeacher();\n//   }, [token]);\n\n//   useEffect(() => {\n//     if (!sessionId) return;\n\n//     const fetchStudents = async () => {\n//         try {\n//           const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\n//           setStudents(res.data.students || []);\n//         } catch (err) {\n//           console.error('Error fetching students:', err);\n//         }\n//     };\n\n//     fetchStudents();\n//     const interval = setInterval(fetchStudents, 3000);\n\n//     return () => clearInterval(interval);\n//   }, [sessionId]);\n\n//   useEffect(() => {\n//     if (!sessionId || !localIP) return;\n\n//     const refreshQR = async () => {\n//       try {\n//         await axios.put(`http://localhost:5000/api/attendance/refresh-qr/${sessionId}`);\n//         setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\n//       } catch (error) {\n//         console.error(\"Failed to refresh QR code\", error);\n//         if (error.response && error.response.status === 404) {\n//           console.log(\"Stale session ID detected. Clearing session.\");\n//           handleEndSession();\n//         }\n//       }\n//     };\n\n//     const interval = setInterval(refreshQR, 10000);\n\n//     return () => clearInterval(interval);\n//   }, [sessionId, localIP]);\n\n//   useEffect(() => {\n//     if (!teacher._id) return;\n//     const fetchAttendanceHistory = async () => {\n//       try {\n//         const res = await axios.get(`http://localhost:5000/api/attendance/teacher/${teacher._id}`);\n//         setHistorySessions(res.data);\n//       } catch (err) {\n//         console.error('Failed to load history:', err);\n//       }\n//     };\n//     fetchAttendanceHistory();\n//   }, [teacher._id]);\n\n//   const handleCreateSession = async () => {\n//     const { className, subject, hour, date } = form;\n//     if (!className || !subject || !hour || !date) {\n//       alert('All fields are required');\n//       return;\n//     }\n//     if (!localIP) {\n//       alert('Network IP not available yet. Please wait a moment and try again.');\n//       return;\n//     }\n\n//     try {\n//       const res = await axios.post(\n//         'http://localhost:5000/api/attendance/create',\n//         { ...form, teacherId: teacher._id },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n\n//       const newSessionId = res.data._id;\n//       setSessionId(newSessionId);\n//       localStorage.setItem('activeSessionId', newSessionId);\n\n//       setQrValue(`http://${localIP}:3000/attendance/${newSessionId}?t=${Date.now()}`);\n\n//       setForm({ className: '', subject: '', hour: '', date: '' });\n//     } catch (err) {\n//       console.error('Session creation failed:', err);\n//       alert('Failed to start session.');\n//     }\n//   };\n\n//   const handleAddStudent = async () => {\n//     if (!manualStudent.name || !manualStudent.rollNo) return alert('Enter all fields');\n//     try {\n//       await axios.post('http://localhost:5000/api/attendance/student/manual-add', {\n//         sessionId,\n//         name: manualStudent.name,\n//         rollNo: manualStudent.rollNo\n//       });\n//       setManualStudent({ name: '', rollNo: '' });\n//     } catch (err) {\n//       console.error('Error adding student:', err);\n//       alert('Failed to add student');\n//     }\n//   };\n\n//   const handleDeleteStudent = async (rollNo) => {\n//     try {\n//       await axios.put(`http://localhost:5000/api/attendance/${sessionId}/remove-student`, { rollNo });\n//       setStudents(students.filter((s) => s.rollNo !== rollNo));\n//     } catch (err) {\n//       console.error('Error removing student:', err);\n//       alert('Failed to remove student');\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <h2 className=\"dashboard-title\">Welcome, {teacher.name || 'Teacher'}</h2>\n\n//       <div className=\"dashboard-grid\">\n//         <div className=\"dashboard-card\">\n//           {qrValue ? (\n//             <>\n//               <h3 className=\"section-title\">QR Code - Live Session</h3>\n//               <QRCodeCanvas value={qrValue} size={256} />\n//               <button className=\"end-button\" onClick={handleEndSession}>End Attendance</button>\n//             </>\n//           ) : (\n//             <>\n//               <h3 className=\"section-title\">Start New Attendance</h3>\n//               <input type=\"text\" placeholder=\"Class\" value={form.className} onChange={(e) => setForm({ ...form, className: e.target.value })} className=\"form-input\" required />\n//               <input type=\"text\" placeholder=\"Subject\" value={form.subject} onChange={(e) => setForm({ ...form, subject: e.target.value })} className=\"form-input\" required />\n//               <input type=\"text\" placeholder=\"Hour\" value={form.hour} onChange={(e) => setForm({ ...form, hour: e.target.value })} className=\"form-input\" required />\n//               <input type=\"date\" value={form.date} onChange={(e) => setForm({ ...form, date: e.target.value })} className=\"form-input\" required />\n//               <button className=\"submit-button\" onClick={handleCreateSession}>Generate QR</button>\n//             </>\n//           )}\n//         </div>\n\n//         <div className=\"dashboard-card\">\n//           <h3 className=\"section-title\">Students Present ({students.length})</h3>\n//           {students.length === 0 ? (\n//             <p className=\"text-muted\">No students scanned yet.</p>\n//           ) : (\n//             <ul className=\"student-list\">\n//               {students.map((s, i) => (\n//                 <li key={i} className=\"student-item\">\n//                   {s.name} ({s.rollNo})\n//                   <button onClick={() => handleDeleteStudent(s.rollNo)} className=\"delete-student\">Delete</button>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n\n//           {sessionId && (\n//             <div className=\"mt-4\">\n//               <h4 className='section-title'>Manual Entry</h4>\n//               <input type=\"text\" placeholder=\"Name\" value={manualStudent.name} onChange={(e) => setManualStudent({ ...manualStudent, name: e.target.value })} className=\"form-input\" />\n//               <input type=\"text\" placeholder=\"Roll No\" value={manualStudent.rollNo} onChange={(e) => setManualStudent({ ...manualStudent, rollNo: e.target.value })} className=\"form-input\" />\n//               <button onClick={handleAddStudent} className=\"submit-button\">Add Student</button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       <div className=\"dashboard-card\">\n//         <h3 className=\"section-title large\">ðŸ“… Attendance History</h3>\n//         {historySessions.length === 0 ? (\n//           <p className=\"text-muted\">No previous sessions found.</p>\n//         ) : (\n//           <table className=\"history-table\">\n//             <thead>\n//               <tr>\n//                 <th>Date</th>\n//                 <th>Class</th>\n//                 <th>Subject</th>\n//                 <th>Hour</th>\n//                 <th>Students</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {historySessions.map((session) => (\n//                 <React.Fragment key={session._id}>\n//                   <tr>\n//                     <td>{new Date(session.date).toLocaleDateString()}</td>\n//                     <td>{session.className}</td>\n//                     <td>{session.subject}</td>\n//                     <td>{session.hour}</td>\n//                     <td\n//                       className=\"students-count\"\n//                       onClick={() =>\n//                         setExpandedSession(\n//                           expandedSession === session._id ? null : session._id\n//                         )\n//                       }\n//                     >\n//                       {session.students.length}\n//                     </td>\n//                   </tr>\n//                   {expandedSession === session._id && (\n//                     <tr>\n//                       <td colSpan=\"5\" className=\"expanded-row\">\n//                         <ul className=\"student-list\">\n//                           {session.students.map((s, i) => (\n//                             <li key={i}>{s.name} ({s.rollNo})</li>\n//                           ))}\n//                         </ul>\n//                       </td>\n//                     </tr>\n//                   )}\n//                 </React.Fragment>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TeacherDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport './TeacherDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeacherDashboard = () => {\n  _s();\n  const [teacher, setTeacher] = useState({});\n  const [sessionId, setSessionId] = useState(localStorage.getItem('activeSessionId') || null);\n  const [form, setForm] = useState({\n    className: '',\n    subject: '',\n    hour: '',\n    date: ''\n  });\n  const [students, setStudents] = useState([]);\n  const [historySessions, setHistorySessions] = useState([]);\n  const [expandedSession, setExpandedSession] = useState(null);\n  const [manualStudent, setManualStudent] = useState({\n    name: '',\n    rollNo: ''\n  });\n  const [qrValue, setQrValue] = useState('');\n  const token = localStorage.getItem('teacherToken');\n  const hostname = window.location.hostname;\n  const handleEndSession = () => {\n    localStorage.removeItem('activeSessionId');\n    setSessionId(null);\n    setStudents([]);\n    setQrValue('');\n  };\n  useEffect(() => {\n    if (sessionId) {\n      setQrValue(`http://${hostname}:3000/attendance/${sessionId}?t=${Date.now()}`);\n    }\n  }, [sessionId, hostname]);\n  useEffect(() => {\n    const fetchTeacher = async () => {\n      if (!token) return;\n      try {\n        const res = await axios.get('http://localhost:5000/api/teachers/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTeacher(res.data);\n      } catch (err) {\n        console.error('Failed to fetch teacher:', err);\n      }\n    };\n    fetchTeacher();\n  }, [token]);\n  useEffect(() => {\n    if (!sessionId) return;\n    const fetchStudents = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\n        setStudents(res.data.students || []);\n      } catch (err) {\n        console.error('Error fetching students:', err);\n      }\n    };\n    fetchStudents();\n    const interval = setInterval(fetchStudents, 3000);\n    return () => clearInterval(interval);\n  }, [sessionId]);\n  useEffect(() => {\n    if (!sessionId) return;\n    const refreshQR = async () => {\n      try {\n        await axios.put(`http://localhost:5000/api/attendance/refresh-qr/${sessionId}`);\n        setQrValue(`http://${hostname}:3000/attendance/${sessionId}?t=${Date.now()}`);\n      } catch (error) {\n        console.error(\"Failed to refresh QR code\", error);\n        if (error.response && error.response.status === 404) {\n          handleEndSession();\n        }\n      }\n    };\n    const interval = setInterval(refreshQR, 10000);\n    return () => clearInterval(interval);\n  }, [sessionId, hostname]);\n  useEffect(() => {\n    if (!teacher._id) return;\n    const fetchAttendanceHistory = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/attendance/teacher/${teacher._id}`);\n        setHistorySessions(res.data);\n      } catch (err) {\n        console.error('Failed to load history:', err);\n      }\n    };\n    fetchAttendanceHistory();\n  }, [teacher._id]);\n  const handleCreateSession = async () => {\n    const {\n      className,\n      subject,\n      hour,\n      date\n    } = form;\n    if (!className || !subject || !hour || !date) {\n      alert('All fields are required');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/attendance/create', {\n        ...form,\n        teacherId: teacher._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newSessionId = res.data._id;\n      setSessionId(newSessionId);\n      localStorage.setItem('activeSessionId', newSessionId);\n      setQrValue(`http://${hostname}:3000/attendance/${newSessionId}?t=${Date.now()}`);\n      setForm({\n        className: '',\n        subject: '',\n        hour: '',\n        date: ''\n      });\n    } catch (err) {\n      console.error('Session creation failed:', err);\n      alert('Failed to start session.');\n    }\n  };\n  const handleAddStudent = async () => {\n    if (!manualStudent.name || !manualStudent.rollNo) return alert('Enter all fields');\n    try {\n      await axios.post('http://localhost:5000/api/attendance/student/manual-add', {\n        sessionId,\n        name: manualStudent.name,\n        rollNo: manualStudent.rollNo\n      });\n      setManualStudent({\n        name: '',\n        rollNo: ''\n      });\n    } catch (err) {\n      console.error('Error adding student:', err);\n      alert('Failed to add student');\n    }\n  };\n  const handleDeleteStudent = async rollNo => {\n    try {\n      await axios.put(`http://localhost:5000/api/attendance/${sessionId}/remove-student`, {\n        rollNo\n      });\n      setStudents(students.filter(s => s.rollNo !== rollNo));\n    } catch (err) {\n      console.error('Error removing student:', err);\n      alert('Failed to remove student');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard-title\",\n      children: [\"Welcome, \", teacher.name || 'Teacher']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: qrValue ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"QR Code - Live Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n            value: qrValue,\n            size: 256\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"end-button\",\n            onClick: handleEndSession,\n            children: \"End Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"Start New Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Class\",\n            value: form.className,\n            onChange: e => setForm({\n              ...form,\n              className: e.target.value\n            }),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Subject\",\n            value: form.subject,\n            onChange: e => setForm({\n              ...form,\n              subject: e.target.value\n            }),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Hour\",\n            value: form.hour,\n            onChange: e => setForm({\n              ...form,\n              hour: e.target.value\n            }),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: form.date,\n            onChange: e => setForm({\n              ...form,\n              date: e.target.value\n            }),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: handleCreateSession,\n            children: \"Generate QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: [\"Students Present (\", students.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), students.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"No students scanned yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"student-list\",\n          children: students.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"student-item\",\n            children: [s.name, \" (\", s.rollNo, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteStudent(s.rollNo),\n              className: \"delete-student\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), sessionId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-title\",\n            children: \"Manual Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: manualStudent.name,\n            onChange: e => setManualStudent({\n              ...manualStudent,\n              name: e.target.value\n            }),\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Roll No\",\n            value: manualStudent.rollNo,\n            onChange: e => setManualStudent({\n              ...manualStudent,\n              rollNo: e.target.value\n            }),\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddStudent,\n            className: \"submit-button\",\n            children: \"Add Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title large\",\n        children: \"\\uD83D\\uDCC5 Attendance History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), historySessions.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"history-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Students\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: historySessions.map(session => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(session.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: session.className\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: session.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: session.hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"students-count\",\n                onClick: () => setExpandedSession(expandedSession === session._id ? null : session._id),\n                children: session.students.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this), expandedSession === session._id && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                className: \"expanded-row\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"student-list\",\n                  children: session.students.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [s.name, \" (\", s.rollNo, \")\"]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 21\n            }, this)]\n          }, session._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No previous sessions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherDashboard, \"f/f7idEST4VyLDrNsdhyiC4Ie5A=\");\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","QRCodeCanvas","jsxDEV","_jsxDEV","Fragment","_Fragment","TeacherDashboard","_s","teacher","setTeacher","sessionId","setSessionId","localStorage","getItem","form","setForm","className","subject","hour","date","students","setStudents","historySessions","setHistorySessions","expandedSession","setExpandedSession","manualStudent","setManualStudent","name","rollNo","qrValue","setQrValue","token","hostname","window","location","handleEndSession","removeItem","Date","now","fetchTeacher","res","get","headers","Authorization","data","err","console","error","fetchStudents","interval","setInterval","clearInterval","refreshQR","put","response","status","_id","fetchAttendanceHistory","handleCreateSession","alert","post","teacherId","newSessionId","setItem","handleAddStudent","handleDeleteStudent","filter","s","children","fileName","_jsxFileName","lineNumber","columnNumber","value","size","onClick","type","placeholder","onChange","e","target","required","length","map","i","session","toLocaleDateString","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/saira/qr-attendance/src/components/TeacherDashboard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { QRCodeCanvas } from 'qrcode.react';\r\n// import './TeacherDashboard.css';\r\n\r\n// const TeacherDashboard = () => {\r\n//   const [teacher, setTeacher] = useState({});\r\n//   const [sessionId, setSessionId] = useState(localStorage.getItem('activeSessionId') || null);\r\n//   const [form, setForm] = useState({ className: '', subject: '', hour: '', date: '' });\r\n//   const [students, setStudents] = useState([]);\r\n//   const [historySessions, setHistorySessions] = useState([]);\r\n//   const [expandedSession, setExpandedSession] = useState(null);\r\n//   const [manualStudent, setManualStudent] = useState({ name: '', rollNo: '' });\r\n//   const [localIP, setLocalIP] = useState('');\r\n//   const [qrValue, setQrValue] = useState('');\r\n\r\n//   const token = localStorage.getItem('teacherToken');\r\n\r\n//   const handleEndSession = () => {\r\n//     localStorage.removeItem('activeSessionId');\r\n//     setSessionId(null);\r\n//     setStudents([]);\r\n//     setQrValue('');\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchIP = async () => {\r\n//       try {\r\n//         const res = await axios.get('http://localhost:5000/api/utils/my-ip');\r\n//         setLocalIP(res.data.ip);\r\n//       } catch (err) {\r\n//         console.error('Failed to fetch IP:', err);\r\n//       }\r\n//     };\r\n//     fetchIP();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // If there's a session ID in local storage on page load, set the initial QR value\r\n//     if (sessionId && localIP) {\r\n//         setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\r\n//     }\r\n//   }, [sessionId, localIP]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTeacher = async () => {\r\n//       if (!token) return;\r\n//       try {\r\n//         const res = await axios.get('http://localhost:5000/api/teachers/me', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setTeacher(res.data);\r\n//       } catch (err) {\r\n//         console.error('Failed to fetch teacher:', err);\r\n//       }\r\n//     };\r\n//     fetchTeacher();\r\n//   }, [token]);\r\n  \r\n//   useEffect(() => {\r\n//     if (!sessionId) return;\r\n    \r\n//     const fetchStudents = async () => {\r\n//         try {\r\n//           const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\r\n//           setStudents(res.data.students || []);\r\n//         } catch (err) {\r\n//           console.error('Error fetching students:', err);\r\n//         }\r\n//     };\r\n    \r\n//     fetchStudents();\r\n//     const interval = setInterval(fetchStudents, 3000);\r\n\r\n//     return () => clearInterval(interval);\r\n//   }, [sessionId]);\r\n  \r\n//   useEffect(() => {\r\n//     if (!sessionId || !localIP) return;\r\n\r\n//     const refreshQR = async () => {\r\n//       try {\r\n//         await axios.put(`http://localhost:5000/api/attendance/refresh-qr/${sessionId}`);\r\n//         setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\r\n//       } catch (error) {\r\n//         console.error(\"Failed to refresh QR code\", error);\r\n//         if (error.response && error.response.status === 404) {\r\n//           console.log(\"Stale session ID detected. Clearing session.\");\r\n//           handleEndSession();\r\n//         }\r\n//       }\r\n//     };\r\n\r\n//     const interval = setInterval(refreshQR, 10000);\r\n\r\n//     return () => clearInterval(interval);\r\n//   }, [sessionId, localIP]);\r\n\r\n//   useEffect(() => {\r\n//     if (!teacher._id) return;\r\n//     const fetchAttendanceHistory = async () => {\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:5000/api/attendance/teacher/${teacher._id}`);\r\n//         setHistorySessions(res.data);\r\n//       } catch (err) {\r\n//         console.error('Failed to load history:', err);\r\n//       }\r\n//     };\r\n//     fetchAttendanceHistory();\r\n//   }, [teacher._id]);\r\n\r\n//   const handleCreateSession = async () => {\r\n//     const { className, subject, hour, date } = form;\r\n//     if (!className || !subject || !hour || !date) {\r\n//       alert('All fields are required');\r\n//       return;\r\n//     }\r\n//     if (!localIP) {\r\n//       alert('Network IP not available yet. Please wait a moment and try again.');\r\n//       return;\r\n//     }\r\n  \r\n//     try {\r\n//       const res = await axios.post(\r\n//         'http://localhost:5000/api/attendance/create',\r\n//         { ...form, teacherId: teacher._id },\r\n//         { headers: { Authorization: `Bearer ${token}` } }\r\n//       );\r\n      \r\n//       const newSessionId = res.data._id;\r\n//       setSessionId(newSessionId);\r\n//       localStorage.setItem('activeSessionId', newSessionId);\r\n      \r\n//       setQrValue(`http://${localIP}:3000/attendance/${newSessionId}?t=${Date.now()}`);\r\n\r\n//       setForm({ className: '', subject: '', hour: '', date: '' });\r\n//     } catch (err) {\r\n//       console.error('Session creation failed:', err);\r\n//       alert('Failed to start session.');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddStudent = async () => {\r\n//     if (!manualStudent.name || !manualStudent.rollNo) return alert('Enter all fields');\r\n//     try {\r\n//       await axios.post('http://localhost:5000/api/attendance/student/manual-add', {\r\n//         sessionId,\r\n//         name: manualStudent.name,\r\n//         rollNo: manualStudent.rollNo\r\n//       });\r\n//       setManualStudent({ name: '', rollNo: '' });\r\n//     } catch (err) {\r\n//       console.error('Error adding student:', err);\r\n//       alert('Failed to add student');\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteStudent = async (rollNo) => {\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/api/attendance/${sessionId}/remove-student`, { rollNo });\r\n//       setStudents(students.filter((s) => s.rollNo !== rollNo));\r\n//     } catch (err) {\r\n//       console.error('Error removing student:', err);\r\n//       alert('Failed to remove student');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container\">\r\n//       <h2 className=\"dashboard-title\">Welcome, {teacher.name || 'Teacher'}</h2>\r\n\r\n//       <div className=\"dashboard-grid\">\r\n//         <div className=\"dashboard-card\">\r\n//           {qrValue ? (\r\n//             <>\r\n//               <h3 className=\"section-title\">QR Code - Live Session</h3>\r\n//               <QRCodeCanvas value={qrValue} size={256} />\r\n//               <button className=\"end-button\" onClick={handleEndSession}>End Attendance</button>\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <h3 className=\"section-title\">Start New Attendance</h3>\r\n//               <input type=\"text\" placeholder=\"Class\" value={form.className} onChange={(e) => setForm({ ...form, className: e.target.value })} className=\"form-input\" required />\r\n//               <input type=\"text\" placeholder=\"Subject\" value={form.subject} onChange={(e) => setForm({ ...form, subject: e.target.value })} className=\"form-input\" required />\r\n//               <input type=\"text\" placeholder=\"Hour\" value={form.hour} onChange={(e) => setForm({ ...form, hour: e.target.value })} className=\"form-input\" required />\r\n//               <input type=\"date\" value={form.date} onChange={(e) => setForm({ ...form, date: e.target.value })} className=\"form-input\" required />\r\n//               <button className=\"submit-button\" onClick={handleCreateSession}>Generate QR</button>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"dashboard-card\">\r\n//           <h3 className=\"section-title\">Students Present ({students.length})</h3>\r\n//           {students.length === 0 ? (\r\n//             <p className=\"text-muted\">No students scanned yet.</p>\r\n//           ) : (\r\n//             <ul className=\"student-list\">\r\n//               {students.map((s, i) => (\r\n//                 <li key={i} className=\"student-item\">\r\n//                   {s.name} ({s.rollNo})\r\n//                   <button onClick={() => handleDeleteStudent(s.rollNo)} className=\"delete-student\">Delete</button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           )}\r\n\r\n//           {sessionId && (\r\n//             <div className=\"mt-4\">\r\n//               <h4 className='section-title'>Manual Entry</h4>\r\n//               <input type=\"text\" placeholder=\"Name\" value={manualStudent.name} onChange={(e) => setManualStudent({ ...manualStudent, name: e.target.value })} className=\"form-input\" />\r\n//               <input type=\"text\" placeholder=\"Roll No\" value={manualStudent.rollNo} onChange={(e) => setManualStudent({ ...manualStudent, rollNo: e.target.value })} className=\"form-input\" />\r\n//               <button onClick={handleAddStudent} className=\"submit-button\">Add Student</button>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"dashboard-card\">\r\n//         <h3 className=\"section-title large\">ðŸ“… Attendance History</h3>\r\n//         {historySessions.length === 0 ? (\r\n//           <p className=\"text-muted\">No previous sessions found.</p>\r\n//         ) : (\r\n//           <table className=\"history-table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Date</th>\r\n//                 <th>Class</th>\r\n//                 <th>Subject</th>\r\n//                 <th>Hour</th>\r\n//                 <th>Students</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {historySessions.map((session) => (\r\n//                 <React.Fragment key={session._id}>\r\n//                   <tr>\r\n//                     <td>{new Date(session.date).toLocaleDateString()}</td>\r\n//                     <td>{session.className}</td>\r\n//                     <td>{session.subject}</td>\r\n//                     <td>{session.hour}</td>\r\n//                     <td\r\n//                       className=\"students-count\"\r\n//                       onClick={() =>\r\n//                         setExpandedSession(\r\n//                           expandedSession === session._id ? null : session._id\r\n//                         )\r\n//                       }\r\n//                     >\r\n//                       {session.students.length}\r\n//                     </td>\r\n//                   </tr>\r\n//                   {expandedSession === session._id && (\r\n//                     <tr>\r\n//                       <td colSpan=\"5\" className=\"expanded-row\">\r\n//                         <ul className=\"student-list\">\r\n//                           {session.students.map((s, i) => (\r\n//                             <li key={i}>{s.name} ({s.rollNo})</li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </td>\r\n//                     </tr>\r\n//                   )}\r\n//                 </React.Fragment>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TeacherDashboard;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { QRCodeCanvas } from 'qrcode.react';\r\nimport './TeacherDashboard.css';\r\n\r\nconst TeacherDashboard = () => {\r\n  const [teacher, setTeacher] = useState({});\r\n  const [sessionId, setSessionId] = useState(localStorage.getItem('activeSessionId') || null);\r\n  const [form, setForm] = useState({ className: '', subject: '', hour: '', date: '' });\r\n  const [students, setStudents] = useState([]);\r\n  const [historySessions, setHistorySessions] = useState([]);\r\n  const [expandedSession, setExpandedSession] = useState(null);\r\n  const [manualStudent, setManualStudent] = useState({ name: '', rollNo: '' });\r\n  const [qrValue, setQrValue] = useState('');\r\n\r\n  const token = localStorage.getItem('teacherToken');\r\n  const hostname = window.location.hostname;\r\n\r\n  const handleEndSession = () => {\r\n    localStorage.removeItem('activeSessionId');\r\n    setSessionId(null);\r\n    setStudents([]);\r\n    setQrValue('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionId) {\r\n      setQrValue(`http://${hostname}:3000/attendance/${sessionId}?t=${Date.now()}`);\r\n    }\r\n  }, [sessionId, hostname]);\r\n\r\n  useEffect(() => {\r\n    const fetchTeacher = async () => {\r\n      if (!token) return;\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/teachers/me', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setTeacher(res.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch teacher:', err);\r\n      }\r\n    };\r\n    fetchTeacher();\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    if (!sessionId) return;\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\r\n        setStudents(res.data.students || []);\r\n      } catch (err) {\r\n        console.error('Error fetching students:', err);\r\n      }\r\n    };\r\n    fetchStudents();\r\n    const interval = setInterval(fetchStudents, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [sessionId]);\r\n\r\n  useEffect(() => {\r\n    if (!sessionId) return;\r\n    const refreshQR = async () => {\r\n      try {\r\n        await axios.put(`http://localhost:5000/api/attendance/refresh-qr/${sessionId}`);\r\n        setQrValue(`http://${hostname}:3000/attendance/${sessionId}?t=${Date.now()}`);\r\n      } catch (error) {\r\n        console.error(\"Failed to refresh QR code\", error);\r\n        if (error.response && error.response.status === 404) {\r\n          handleEndSession();\r\n        }\r\n      }\r\n    };\r\n    const interval = setInterval(refreshQR, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [sessionId, hostname]);\r\n  \r\n  useEffect(() => {\r\n    if (!teacher._id) return;\r\n    const fetchAttendanceHistory = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/attendance/teacher/${teacher._id}`);\r\n        setHistorySessions(res.data);\r\n      } catch (err) {\r\n        console.error('Failed to load history:', err);\r\n      }\r\n    };\r\n    fetchAttendanceHistory();\r\n  }, [teacher._id]);\r\n\r\n  const handleCreateSession = async () => {\r\n    const { className, subject, hour, date } = form;\r\n    if (!className || !subject || !hour || !date) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/attendance/create',\r\n        { ...form, teacherId: teacher._id },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const newSessionId = res.data._id;\r\n      setSessionId(newSessionId);\r\n      localStorage.setItem('activeSessionId', newSessionId);\r\n      setQrValue(`http://${hostname}:3000/attendance/${newSessionId}?t=${Date.now()}`);\r\n      setForm({ className: '', subject: '', hour: '', date: '' });\r\n    } catch (err) {\r\n      console.error('Session creation failed:', err);\r\n      alert('Failed to start session.');\r\n    }\r\n  };\r\n\r\n  const handleAddStudent = async () => {\r\n    if (!manualStudent.name || !manualStudent.rollNo) return alert('Enter all fields');\r\n    try {\r\n      await axios.post('http://localhost:5000/api/attendance/student/manual-add', {\r\n        sessionId,\r\n        name: manualStudent.name,\r\n        rollNo: manualStudent.rollNo\r\n      });\r\n      setManualStudent({ name: '', rollNo: '' });\r\n    } catch (err) {\r\n      console.error('Error adding student:', err);\r\n      alert('Failed to add student');\r\n    }\r\n  };\r\n\r\n  const handleDeleteStudent = async (rollNo) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/attendance/${sessionId}/remove-student`, { rollNo });\r\n      setStudents(students.filter((s) => s.rollNo !== rollNo));\r\n    } catch (err) {\r\n      console.error('Error removing student:', err);\r\n      alert('Failed to remove student');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2 className=\"dashboard-title\">Welcome, {teacher.name || 'Teacher'}</h2>\r\n      <div className=\"dashboard-grid\">\r\n        <div className=\"dashboard-card\">\r\n          {qrValue ? (\r\n            <>\r\n              <h3 className=\"section-title\">QR Code - Live Session</h3>\r\n              <QRCodeCanvas value={qrValue} size={256} />\r\n              <button className=\"end-button\" onClick={handleEndSession}>End Attendance</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"section-title\">Start New Attendance</h3>\r\n              <input type=\"text\" placeholder=\"Class\" value={form.className} onChange={(e) => setForm({ ...form, className: e.target.value })} className=\"form-input\" required />\r\n              <input type=\"text\" placeholder=\"Subject\" value={form.subject} onChange={(e) => setForm({ ...form, subject: e.target.value })} className=\"form-input\" required />\r\n              <input type=\"text\" placeholder=\"Hour\" value={form.hour} onChange={(e) => setForm({ ...form, hour: e.target.value })} className=\"form-input\" required />\r\n              <input type=\"date\" value={form.date} onChange={(e) => setForm({ ...form, date: e.target.value })} className=\"form-input\" required />\r\n              <button className=\"submit-button\" onClick={handleCreateSession}>Generate QR</button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"dashboard-card\">\r\n          <h3 className=\"section-title\">Students Present ({students.length})</h3>\r\n          {students.length === 0 ? (\r\n            <p className=\"text-muted\">No students scanned yet.</p>\r\n          ) : (\r\n            <ul className=\"student-list\">\r\n              {students.map((s, i) => (\r\n                <li key={i} className=\"student-item\">\r\n                  {s.name} ({s.rollNo})\r\n                  <button onClick={() => handleDeleteStudent(s.rollNo)} className=\"delete-student\">Delete</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n          {sessionId && (\r\n            <div className=\"mt-4\">\r\n              <h4 className='section-title'>Manual Entry</h4>\r\n              <input type=\"text\" placeholder=\"Name\" value={manualStudent.name} onChange={(e) => setManualStudent({ ...manualStudent, name: e.target.value })} className=\"form-input\" />\r\n              <input type=\"text\" placeholder=\"Roll No\" value={manualStudent.rollNo} onChange={(e) => setManualStudent({ ...manualStudent, rollNo: e.target.value })} className=\"form-input\" />\r\n              <button onClick={handleAddStudent} className=\"submit-button\">Add Student</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-card\">\r\n        <h3 className=\"section-title large\">ðŸ“… Attendance History</h3>\r\n        {historySessions.length > 0 ? (\r\n          <table className=\"history-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Class</th>\r\n                <th>Subject</th>\r\n                <th>Hour</th>\r\n                <th>Students</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {historySessions.map((session) => (\r\n                <React.Fragment key={session._id}>\r\n                  <tr>\r\n                    <td>{new Date(session.date).toLocaleDateString()}</td>\r\n                    <td>{session.className}</td>\r\n                    <td>{session.subject}</td>\r\n                    <td>{session.hour}</td>\r\n                    <td\r\n                      className=\"students-count\"\r\n                      onClick={() =>\r\n                        setExpandedSession(\r\n                          expandedSession === session._id ? null : session._id\r\n                        )\r\n                      }\r\n                    >\r\n                      {session.students.length}\r\n                    </td>\r\n                  </tr>\r\n                  {expandedSession === session._id && (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"expanded-row\">\r\n                        <ul className=\"student-list\">\r\n                          {session.students.map((s, i) => (\r\n                            <li key={i}>{s.name} ({s.rollNo})</li>\r\n                          ))}\r\n                        </ul>\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p className=\"text-muted\">No previous sessions found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}