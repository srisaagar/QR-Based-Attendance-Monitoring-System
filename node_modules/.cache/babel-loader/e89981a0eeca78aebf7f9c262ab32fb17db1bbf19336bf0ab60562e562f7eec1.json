{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saira\\\\qr-attendance-frontend\\\\src\\\\components\\\\TeacherDashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { QRCodeCanvas } from 'qrcode.react';\n\n// const TeacherDashboard = () => {\n//   const [teacher, setTeacher] = useState({});\n//   const [sessionId, setSessionId] = useState(null);\n//   const [form, setForm] = useState({ className: '', subject: '', hour: '', date: '' });\n//   const [students, setStudents] = useState([]);\n\n//   const token = localStorage.getItem('token'); // must match login's key\n\n//   // Fetch teacher data on mount\n//   useEffect(() => {\n//     const fetchTeacher = async () => {\n//       try {\n//         const res = await axios.get('http://localhost:5000/api/teachers/me', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setTeacher(res.data);\n//       } catch (err) {\n//         console.error('Error fetching teacher:', err);\n//         alert('Authentication failed. Please login again.');\n//       }\n//     };\n//     fetchTeacher();\n//   }, [token]);\n\n//   // Start polling students who scanned attendance\n//   useEffect(() => {\n//     let interval;\n//     if (sessionId) {\n//       interval = setInterval(async () => {\n//         try {\n//           const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\n//           setStudents(res.data.students || []);\n//         } catch (err) {\n//           console.error('Error fetching students:', err);\n//         }\n//       }, 3000);\n//     }\n//     return () => clearInterval(interval); // clean up on unmount or new session\n//   }, [sessionId]);\n\n//   // Create attendance session\n//   const handleCreateSession = async () => {\n//     try {\n//       const res = await axios.post(\n//         'http://localhost:5000/api/attendance/create',\n//         { ...form, teacherId: teacher._id },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       setSessionId(res.data._id);\n//     } catch (err) {\n//       console.error('Error creating session:', err);\n//       alert('Failed to start attendance session.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 bg-gray-100 min-h-screen\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Welcome, {teacher.name || 'Teacher'}</h2>\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//         {/* Left: QR Code or Form */}\n//         <div className=\"bg-white p-4 rounded shadow\">\n//           {sessionId ? (\n//             <>\n//               <h3 className=\"mb-2 font-semibold\">Scan this QR to mark attendance</h3>\n//               <QRCodeCanvas\n//                 value={`http://192.168.0.4:3000/attendance/${sessionId}`}\n//                 size={256}\n//               />\n//             </>\n//           ) : (\n//             <>\n//               <h3 className=\"mb-2 font-semibold\">Start New Attendance</h3>\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Class\"\n//                 value={form.className}\n//                 onChange={(e) => setForm({ ...form, className: e.target.value })}\n//                 className=\"w-full mb-2 p-2 border rounded\"\n//                 required\n//               />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Subject\"\n//                 value={form.subject}\n//                 onChange={(e) => setForm({ ...form, subject: e.target.value })}\n//                 className=\"w-full mb-2 p-2 border rounded\"\n//                 required\n//               />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Hour\"\n//                 value={form.hour}\n//                 onChange={(e) => setForm({ ...form, hour: e.target.value })}\n//                 className=\"w-full mb-2 p-2 border rounded\"\n//                 required\n//               />\n//               <input\n//                 type=\"date\"\n//                 value={form.date}\n//                 onChange={(e) => setForm({ ...form, date: e.target.value })}\n//                 className=\"w-full mb-2 p-2 border rounded\"\n//                 required\n//               />\n//               <button\n//                 className=\"bg-green-600 text-white w-full py-2 rounded\"\n//                 onClick={handleCreateSession}\n//               >\n//                 Generate QR\n//               </button>\n//             </>\n//           )}\n//         </div>\n\n//         {/* Right: Student List */}\n//         <div className=\"bg-white p-4 rounded shadow\">\n//           <h3 className=\"font-semibold mb-2\">Students Present</h3>\n//           {students.length === 0 ? (\n//             <p>No students scanned yet.</p>\n//           ) : (\n//             <ul className=\"max-h-96 overflow-y-auto\">\n//               {students.map((s, i) => (\n//                 <li key={i} className=\"border-b py-1\">\n//                   {s.name} ({s.rollNo})\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TeacherDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeacherDashboard = () => {\n  _s();\n  const [teacher, setTeacher] = useState({});\n  const [sessionId, setSessionId] = useState(null);\n  const [form, setForm] = useState({\n    className: '',\n    subject: '',\n    hour: '',\n    date: ''\n  });\n  const [students, setStudents] = useState([]);\n  const token = localStorage.getItem('teacherToken'); // Make sure this matches login storage key\n\n  // Fetch teacher info\n  useEffect(() => {\n    const fetchTeacher = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/teachers/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTeacher(res.data);\n      } catch (err) {\n        console.error('Error fetching teacher:', err);\n        alert('Login required. Please log in again.');\n      }\n    };\n    fetchTeacher();\n  }, [token]);\n\n  // Fetch students attending this session\n  useEffect(() => {\n    let interval;\n    if (sessionId) {\n      interval = setInterval(async () => {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\n          setStudents(res.data.students || []);\n        } catch (err) {\n          console.error('Error fetching students:', err);\n        }\n      }, 3000);\n    }\n    return () => clearInterval(interval);\n  }, [sessionId]);\n\n  // Create attendance session\n  const handleCreateSession = async () => {\n    const {\n      className,\n      subject,\n      hour,\n      date\n    } = form;\n    if (!className.trim() || !subject.trim() || !hour.trim() || !date) {\n      alert('All fields (Class, Subject, Hour, Date) are required');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/attendance/create', {\n        ...form,\n        teacherId: teacher._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionId(res.data._id);\n    } catch (err) {\n      console.error('Error creating session:', err);\n      alert('Failed to start attendance session.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Welcome, \", teacher.name || 'Teacher']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded shadow\",\n        children: sessionId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-2 font-semibold\",\n            children: \"Scan this QR to mark attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n            value: `http://192.168.0.4:3000/attendance/${sessionId}` // Replace with your LAN IP\n            ,\n            size: 256\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-2 font-semibold\",\n            children: \"Start New Attendance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Class\",\n            value: form.className,\n            onChange: e => setForm({\n              ...form,\n              className: e.target.value\n            }),\n            className: \"w-full mb-2 p-2 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Subject\",\n            value: form.subject,\n            onChange: e => setForm({\n              ...form,\n              subject: e.target.value\n            }),\n            className: \"w-full mb-2 p-2 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Hour\",\n            value: form.hour,\n            onChange: e => setForm({\n              ...form,\n              hour: e.target.value\n            }),\n            className: \"w-full mb-2 p-2 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: form.date,\n            onChange: e => setForm({\n              ...form,\n              date: e.target.value\n            }),\n            className: \"w-full mb-2 p-2 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-600 text-white w-full py-2 rounded\",\n            onClick: handleCreateSession,\n            children: \"Generate QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Students Present\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), students.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No students have scanned the QR yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"max-h-96 overflow-y-auto\",\n          children: students.map((s, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"border-b py-1\",\n            children: [s.name, \" (\", s.rollNo, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherDashboard, \"Mz51c15/nxh03PbcGSAUuh5r0mQ=\");\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","QRCodeCanvas","jsxDEV","_jsxDEV","Fragment","_Fragment","TeacherDashboard","_s","teacher","setTeacher","sessionId","setSessionId","form","setForm","className","subject","hour","date","students","setStudents","token","localStorage","getItem","fetchTeacher","res","get","headers","Authorization","data","err","console","error","alert","interval","setInterval","clearInterval","handleCreateSession","trim","post","teacherId","_id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","value","size","type","placeholder","onChange","e","target","required","onClick","length","map","s","index","rollNo","_c","$RefreshReg$"],"sources":["C:/Users/saira/qr-attendance-frontend/src/components/TeacherDashboard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { QRCodeCanvas } from 'qrcode.react';\r\n\r\n// const TeacherDashboard = () => {\r\n//   const [teacher, setTeacher] = useState({});\r\n//   const [sessionId, setSessionId] = useState(null);\r\n//   const [form, setForm] = useState({ className: '', subject: '', hour: '', date: '' });\r\n//   const [students, setStudents] = useState([]);\r\n\r\n//   const token = localStorage.getItem('token'); // must match login's key\r\n\r\n//   // Fetch teacher data on mount\r\n//   useEffect(() => {\r\n//     const fetchTeacher = async () => {\r\n//       try {\r\n//         const res = await axios.get('http://localhost:5000/api/teachers/me', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setTeacher(res.data);\r\n//       } catch (err) {\r\n//         console.error('Error fetching teacher:', err);\r\n//         alert('Authentication failed. Please login again.');\r\n//       }\r\n//     };\r\n//     fetchTeacher();\r\n//   }, [token]);\r\n\r\n//   // Start polling students who scanned attendance\r\n//   useEffect(() => {\r\n//     let interval;\r\n//     if (sessionId) {\r\n//       interval = setInterval(async () => {\r\n//         try {\r\n//           const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\r\n//           setStudents(res.data.students || []);\r\n//         } catch (err) {\r\n//           console.error('Error fetching students:', err);\r\n//         }\r\n//       }, 3000);\r\n//     }\r\n//     return () => clearInterval(interval); // clean up on unmount or new session\r\n//   }, [sessionId]);\r\n\r\n//   // Create attendance session\r\n//   const handleCreateSession = async () => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         'http://localhost:5000/api/attendance/create',\r\n//         { ...form, teacherId: teacher._id },\r\n//         { headers: { Authorization: `Bearer ${token}` } }\r\n//       );\r\n//       setSessionId(res.data._id);\r\n//     } catch (err) {\r\n//       console.error('Error creating session:', err);\r\n//       alert('Failed to start attendance session.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">Welcome, {teacher.name || 'Teacher'}</h2>\r\n\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//         {/* Left: QR Code or Form */}\r\n//         <div className=\"bg-white p-4 rounded shadow\">\r\n//           {sessionId ? (\r\n//             <>\r\n//               <h3 className=\"mb-2 font-semibold\">Scan this QR to mark attendance</h3>\r\n//               <QRCodeCanvas\r\n//                 value={`http://192.168.0.4:3000/attendance/${sessionId}`}\r\n//                 size={256}\r\n//               />\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <h3 className=\"mb-2 font-semibold\">Start New Attendance</h3>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Class\"\r\n//                 value={form.className}\r\n//                 onChange={(e) => setForm({ ...form, className: e.target.value })}\r\n//                 className=\"w-full mb-2 p-2 border rounded\"\r\n//                 required\r\n//               />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Subject\"\r\n//                 value={form.subject}\r\n//                 onChange={(e) => setForm({ ...form, subject: e.target.value })}\r\n//                 className=\"w-full mb-2 p-2 border rounded\"\r\n//                 required\r\n//               />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Hour\"\r\n//                 value={form.hour}\r\n//                 onChange={(e) => setForm({ ...form, hour: e.target.value })}\r\n//                 className=\"w-full mb-2 p-2 border rounded\"\r\n//                 required\r\n//               />\r\n//               <input\r\n//                 type=\"date\"\r\n//                 value={form.date}\r\n//                 onChange={(e) => setForm({ ...form, date: e.target.value })}\r\n//                 className=\"w-full mb-2 p-2 border rounded\"\r\n//                 required\r\n//               />\r\n//               <button\r\n//                 className=\"bg-green-600 text-white w-full py-2 rounded\"\r\n//                 onClick={handleCreateSession}\r\n//               >\r\n//                 Generate QR\r\n//               </button>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Right: Student List */}\r\n//         <div className=\"bg-white p-4 rounded shadow\">\r\n//           <h3 className=\"font-semibold mb-2\">Students Present</h3>\r\n//           {students.length === 0 ? (\r\n//             <p>No students scanned yet.</p>\r\n//           ) : (\r\n//             <ul className=\"max-h-96 overflow-y-auto\">\r\n//               {students.map((s, i) => (\r\n//                 <li key={i} className=\"border-b py-1\">\r\n//                   {s.name} ({s.rollNo})\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TeacherDashboard;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { QRCodeCanvas } from 'qrcode.react';\r\n\r\nconst TeacherDashboard = () => {\r\n  const [teacher, setTeacher] = useState({});\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [form, setForm] = useState({ className: '', subject: '', hour: '', date: '' });\r\n  const [students, setStudents] = useState([]);\r\n\r\n  const token = localStorage.getItem('teacherToken'); // Make sure this matches login storage key\r\n\r\n  // Fetch teacher info\r\n  useEffect(() => {\r\n    const fetchTeacher = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/teachers/me', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setTeacher(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching teacher:', err);\r\n        alert('Login required. Please log in again.');\r\n      }\r\n    };\r\n    fetchTeacher();\r\n  }, [token]);\r\n\r\n  // Fetch students attending this session\r\n  useEffect(() => {\r\n    let interval;\r\n    if (sessionId) {\r\n      interval = setInterval(async () => {\r\n        try {\r\n          const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\r\n          setStudents(res.data.students || []);\r\n        } catch (err) {\r\n          console.error('Error fetching students:', err);\r\n        }\r\n      }, 3000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [sessionId]);\r\n\r\n  // Create attendance session\r\n  const handleCreateSession = async () => {\r\n    const { className, subject, hour, date } = form;\r\n\r\n    if (!className.trim() || !subject.trim() || !hour.trim() || !date) {\r\n      alert('All fields (Class, Subject, Hour, Date) are required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/attendance/create',\r\n        { ...form, teacherId: teacher._id },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setSessionId(res.data._id);\r\n    } catch (err) {\r\n      console.error('Error creating session:', err);\r\n      alert('Failed to start attendance session.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Welcome, {teacher.name || 'Teacher'}</h2>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {/* Left: QR code / session creation */}\r\n        <div className=\"bg-white p-4 rounded shadow\">\r\n          {sessionId ? (\r\n            <>\r\n              <h3 className=\"mb-2 font-semibold\">Scan this QR to mark attendance</h3>\r\n              <QRCodeCanvas\r\n                value={`http://192.168.0.4:3000/attendance/${sessionId}`} // Replace with your LAN IP\r\n                size={256}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"mb-2 font-semibold\">Start New Attendance</h3>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Class\"\r\n                value={form.className}\r\n                onChange={(e) => setForm({ ...form, className: e.target.value })}\r\n                className=\"w-full mb-2 p-2 border rounded\"\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Subject\"\r\n                value={form.subject}\r\n                onChange={(e) => setForm({ ...form, subject: e.target.value })}\r\n                className=\"w-full mb-2 p-2 border rounded\"\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Hour\"\r\n                value={form.hour}\r\n                onChange={(e) => setForm({ ...form, hour: e.target.value })}\r\n                className=\"w-full mb-2 p-2 border rounded\"\r\n                required\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                value={form.date}\r\n                onChange={(e) => setForm({ ...form, date: e.target.value })}\r\n                className=\"w-full mb-2 p-2 border rounded\"\r\n                required\r\n              />\r\n              <button\r\n                className=\"bg-green-600 text-white w-full py-2 rounded\"\r\n                onClick={handleCreateSession}\r\n              >\r\n                Generate QR\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Right: Scanned students */}\r\n        <div className=\"bg-white p-4 rounded shadow\">\r\n          <h3 className=\"font-semibold mb-2\">Students Present</h3>\r\n          {students.length === 0 ? (\r\n            <p>No students have scanned the QR yet.</p>\r\n          ) : (\r\n            <ul className=\"max-h-96 overflow-y-auto\">\r\n              {students.map((s, index) => (\r\n                <li key={index} className=\"border-b py-1\">\r\n                  {s.name} ({s.rollNo})\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,SAAS,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACpF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}