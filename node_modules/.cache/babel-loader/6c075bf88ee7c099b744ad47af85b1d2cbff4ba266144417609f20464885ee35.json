{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { Html5QrcodeScannerStrings } from \"../../strings\";\nimport { BaseUiElementFactory, PublicUiElementIdAndClasses } from \"./base\";\nvar TorchController = function () {\n  function TorchController(torchCapability, buttonController, onTorchActionFailureCallback) {\n    this.isTorchOn = false;\n    this.torchCapability = torchCapability;\n    this.buttonController = buttonController;\n    this.onTorchActionFailureCallback = onTorchActionFailureCallback;\n  }\n  TorchController.prototype.isTorchEnabled = function () {\n    return this.isTorchOn;\n  };\n  TorchController.prototype.flipState = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isTorchOnExpected, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.buttonController.disable();\n            isTorchOnExpected = !this.isTorchOn;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4, this.torchCapability.apply(isTorchOnExpected)];\n          case 2:\n            _a.sent();\n            this.updateUiBasedOnLatestSettings(this.torchCapability.value(), isTorchOnExpected);\n            return [3, 4];\n          case 3:\n            error_1 = _a.sent();\n            this.propagateFailure(isTorchOnExpected, error_1);\n            this.buttonController.enable();\n            return [3, 4];\n          case 4:\n            return [2];\n        }\n      });\n    });\n  };\n  TorchController.prototype.updateUiBasedOnLatestSettings = function (isTorchOn, isTorchOnExpected) {\n    if (isTorchOn === isTorchOnExpected) {\n      this.buttonController.setText(isTorchOnExpected ? Html5QrcodeScannerStrings.torchOffButton() : Html5QrcodeScannerStrings.torchOnButton());\n      this.isTorchOn = isTorchOnExpected;\n    } else {\n      this.propagateFailure(isTorchOnExpected);\n    }\n    this.buttonController.enable();\n  };\n  TorchController.prototype.propagateFailure = function (isTorchOnExpected, error) {\n    var errorMessage = isTorchOnExpected ? Html5QrcodeScannerStrings.torchOnFailedMessage() : Html5QrcodeScannerStrings.torchOffFailedMessage();\n    if (error) {\n      errorMessage += \"; Error = \" + error;\n    }\n    this.onTorchActionFailureCallback(errorMessage);\n  };\n  TorchController.prototype.reset = function () {\n    this.isTorchOn = false;\n  };\n  return TorchController;\n}();\nvar TorchButton = function () {\n  function TorchButton(torchCapability, onTorchActionFailureCallback) {\n    this.onTorchActionFailureCallback = onTorchActionFailureCallback;\n    this.torchButton = BaseUiElementFactory.createElement(\"button\", PublicUiElementIdAndClasses.TORCH_BUTTON_ID);\n    this.torchController = new TorchController(torchCapability, this, onTorchActionFailureCallback);\n  }\n  TorchButton.prototype.render = function (parentElement, torchButtonOptions) {\n    var _this = this;\n    this.torchButton.innerText = Html5QrcodeScannerStrings.torchOnButton();\n    this.torchButton.style.display = torchButtonOptions.display;\n    this.torchButton.style.marginLeft = torchButtonOptions.marginLeft;\n    var $this = this;\n    this.torchButton.addEventListener(\"click\", function (_) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, $this.torchController.flipState()];\n            case 1:\n              _a.sent();\n              if ($this.torchController.isTorchEnabled()) {\n                $this.torchButton.classList.remove(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_OFF);\n                $this.torchButton.classList.add(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_ON);\n              } else {\n                $this.torchButton.classList.remove(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_ON);\n                $this.torchButton.classList.add(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_OFF);\n              }\n              return [2];\n          }\n        });\n      });\n    });\n    parentElement.appendChild(this.torchButton);\n  };\n  TorchButton.prototype.updateTorchCapability = function (torchCapability) {\n    this.torchController = new TorchController(torchCapability, this, this.onTorchActionFailureCallback);\n  };\n  TorchButton.prototype.getTorchButton = function () {\n    return this.torchButton;\n  };\n  TorchButton.prototype.hide = function () {\n    this.torchButton.style.display = \"none\";\n  };\n  TorchButton.prototype.show = function () {\n    this.torchButton.style.display = \"inline-block\";\n  };\n  TorchButton.prototype.disable = function () {\n    this.torchButton.disabled = true;\n  };\n  TorchButton.prototype.enable = function () {\n    this.torchButton.disabled = false;\n  };\n  TorchButton.prototype.setText = function (text) {\n    this.torchButton.innerText = text;\n  };\n  TorchButton.prototype.reset = function () {\n    this.torchButton.innerText = Html5QrcodeScannerStrings.torchOnButton();\n    this.torchController.reset();\n  };\n  TorchButton.create = function (parentElement, torchCapability, torchButtonOptions, onTorchActionFailureCallback) {\n    var button = new TorchButton(torchCapability, onTorchActionFailureCallback);\n    button.render(parentElement, torchButtonOptions);\n    return button;\n  };\n  return TorchButton;\n}();\nexport { TorchButton };\n//# sourceMappingURL=torch-button.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}