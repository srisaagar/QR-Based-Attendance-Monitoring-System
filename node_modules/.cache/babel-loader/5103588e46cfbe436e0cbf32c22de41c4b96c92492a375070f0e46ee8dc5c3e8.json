{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srisa\\\\Downloads\\\\qr-attendance\\\\qr-attendance\\\\src\\\\pages\\\\StudentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './StudentForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentForm = () => {\n  _s();\n  const [form, setForm] = useState({\n    name: '',\n    rollNo: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // The backend will now validate the timestamp of the QR code\n      await axios.post(`http://${window.location.hostname}:5000/api/attendance/student/mark-attendance`, {\n        qrData: window.location.href,\n        // Send the full URL scanned from QR\n        name: form.name,\n        rollNo: form.rollNo,\n        deviceId: navigator.userAgent // A simple way to get a unique device ID\n      });\n      alert('Attendance marked successfully!');\n      // Optionally, disable the form after successful submission\n      e.target.style.display = 'none';\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      // Display the specific error from the backend (e.g., \"QR Code has expired\")\n      alert('Error: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Server error'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"student-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill Your Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: form.name,\n      onChange: e => setForm({\n        ...form,\n        name: e.target.value\n      }),\n      className: \"student-form-input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Roll No\",\n      value: form.rollNo,\n      onChange: e => setForm({\n        ...form,\n        rollNo: e.target.value\n      }),\n      className: \"student-form-input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"student-form-button\",\n      children: \"Submit Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentForm, \"abwHT1BO2GZLsqTXA4q4rpiY5aY=\");\n_c = StudentForm;\nexport default StudentForm;\nvar _c;\n$RefreshReg$(_c, \"StudentForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","StudentForm","_s","form","setForm","name","rollNo","handleSubmit","e","preventDefault","post","window","location","hostname","qrData","href","deviceId","navigator","userAgent","alert","target","style","display","err","_err$response","_err$response2","_err$response2$data","console","error","response","data","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/srisa/Downloads/qr-attendance/qr-attendance/src/pages/StudentForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './StudentForm.css';\r\n\r\nconst StudentForm = () => {\r\n  const [form, setForm] = useState({ name: '', rollNo: '' });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // The backend will now validate the timestamp of the QR code\r\n      await axios.post(`http://${window.location.hostname}:5000/api/attendance/student/mark-attendance`, {\r\n        qrData: window.location.href, // Send the full URL scanned from QR\r\n        name: form.name,\r\n        rollNo: form.rollNo,\r\n        deviceId: navigator.userAgent, // A simple way to get a unique device ID\r\n      });\r\n\r\n      alert('Attendance marked successfully!');\r\n      // Optionally, disable the form after successful submission\r\n      e.target.style.display = 'none';\r\n    } catch (err) {\r\n      console.error(err.response?.data || err.message);\r\n      // Display the specific error from the backend (e.g., \"QR Code has expired\")\r\n      alert('Error: ' + (err.response?.data?.message || 'Server error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"student-form-container\">\r\n      <h2>Fill Your Details</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        value={form.name}\r\n        onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n        className=\"student-form-input\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Roll No\"\r\n        value={form.rollNo}\r\n        onChange={(e) => setForm({ ...form, rollNo: e.target.value })}\r\n        className=\"student-form-input\"\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"student-form-button\">\r\n        Submit Attendance\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}