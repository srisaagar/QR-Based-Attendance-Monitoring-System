{"ast":null,"code":"import { Html5QrcodeScannerStrings } from \"../../strings\";\nimport { BaseUiElementFactory, PublicUiElementIdAndClasses } from \"./base\";\nvar FileSelectionUi = function () {\n  function FileSelectionUi(parentElement, showOnRender, onFileSelected) {\n    this.fileBasedScanRegion = this.createFileBasedScanRegion();\n    this.fileBasedScanRegion.style.display = showOnRender ? \"block\" : \"none\";\n    parentElement.appendChild(this.fileBasedScanRegion);\n    var fileScanLabel = document.createElement(\"label\");\n    fileScanLabel.setAttribute(\"for\", this.getFileScanInputId());\n    fileScanLabel.style.display = \"inline-block\";\n    this.fileBasedScanRegion.appendChild(fileScanLabel);\n    this.fileSelectionButton = BaseUiElementFactory.createElement(\"button\", PublicUiElementIdAndClasses.FILE_SELECTION_BUTTON_ID);\n    this.setInitialValueToButton();\n    this.fileSelectionButton.addEventListener(\"click\", function (_) {\n      fileScanLabel.click();\n    });\n    fileScanLabel.append(this.fileSelectionButton);\n    this.fileScanInput = BaseUiElementFactory.createElement(\"input\", this.getFileScanInputId());\n    this.fileScanInput.type = \"file\";\n    this.fileScanInput.accept = \"image/*\";\n    this.fileScanInput.style.display = \"none\";\n    fileScanLabel.appendChild(this.fileScanInput);\n    var $this = this;\n    this.fileScanInput.addEventListener(\"change\", function (e) {\n      if (e == null || e.target == null) {\n        return;\n      }\n      var target = e.target;\n      if (target.files && target.files.length === 0) {\n        return;\n      }\n      var fileList = target.files;\n      var file = fileList[0];\n      var fileName = file.name;\n      $this.setImageNameToButton(fileName);\n      onFileSelected(file);\n    });\n    var dragAndDropMessage = this.createDragAndDropMessage();\n    this.fileBasedScanRegion.appendChild(dragAndDropMessage);\n    this.fileBasedScanRegion.addEventListener(\"dragenter\", function (event) {\n      $this.fileBasedScanRegion.style.border = $this.fileBasedScanRegionActiveBorder();\n      event.stopPropagation();\n      event.preventDefault();\n    });\n    this.fileBasedScanRegion.addEventListener(\"dragleave\", function (event) {\n      $this.fileBasedScanRegion.style.border = $this.fileBasedScanRegionDefaultBorder();\n      event.stopPropagation();\n      event.preventDefault();\n    });\n    this.fileBasedScanRegion.addEventListener(\"dragover\", function (event) {\n      $this.fileBasedScanRegion.style.border = $this.fileBasedScanRegionActiveBorder();\n      event.stopPropagation();\n      event.preventDefault();\n    });\n    this.fileBasedScanRegion.addEventListener(\"drop\", function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      $this.fileBasedScanRegion.style.border = $this.fileBasedScanRegionDefaultBorder();\n      var dataTransfer = event.dataTransfer;\n      if (dataTransfer) {\n        var files = dataTransfer.files;\n        if (!files || files.length === 0) {\n          return;\n        }\n        var isAnyFileImage = false;\n        for (var i = 0; i < files.length; ++i) {\n          var file = files.item(i);\n          if (!file) {\n            continue;\n          }\n          var imageType = /image.*/;\n          if (!file.type.match(imageType)) {\n            continue;\n          }\n          isAnyFileImage = true;\n          var fileName = file.name;\n          $this.setImageNameToButton(fileName);\n          onFileSelected(file);\n          dragAndDropMessage.innerText = Html5QrcodeScannerStrings.dragAndDropMessage();\n          break;\n        }\n        if (!isAnyFileImage) {\n          dragAndDropMessage.innerText = Html5QrcodeScannerStrings.dragAndDropMessageOnlyImages();\n        }\n      }\n    });\n  }\n  FileSelectionUi.prototype.hide = function () {\n    this.fileBasedScanRegion.style.display = \"none\";\n    this.fileScanInput.disabled = true;\n  };\n  FileSelectionUi.prototype.show = function () {\n    this.fileBasedScanRegion.style.display = \"block\";\n    this.fileScanInput.disabled = false;\n  };\n  FileSelectionUi.prototype.isShowing = function () {\n    return this.fileBasedScanRegion.style.display === \"block\";\n  };\n  FileSelectionUi.prototype.resetValue = function () {\n    this.fileScanInput.value = \"\";\n    this.setInitialValueToButton();\n  };\n  FileSelectionUi.prototype.createFileBasedScanRegion = function () {\n    var fileBasedScanRegion = document.createElement(\"div\");\n    fileBasedScanRegion.style.textAlign = \"center\";\n    fileBasedScanRegion.style.margin = \"auto\";\n    fileBasedScanRegion.style.width = \"80%\";\n    fileBasedScanRegion.style.maxWidth = \"600px\";\n    fileBasedScanRegion.style.border = this.fileBasedScanRegionDefaultBorder();\n    fileBasedScanRegion.style.padding = \"10px\";\n    fileBasedScanRegion.style.marginBottom = \"10px\";\n    return fileBasedScanRegion;\n  };\n  FileSelectionUi.prototype.fileBasedScanRegionDefaultBorder = function () {\n    return \"6px dashed #ebebeb\";\n  };\n  FileSelectionUi.prototype.fileBasedScanRegionActiveBorder = function () {\n    return \"6px dashed rgb(153 151 151)\";\n  };\n  FileSelectionUi.prototype.createDragAndDropMessage = function () {\n    var dragAndDropMessage = document.createElement(\"div\");\n    dragAndDropMessage.innerText = Html5QrcodeScannerStrings.dragAndDropMessage();\n    dragAndDropMessage.style.fontWeight = \"400\";\n    return dragAndDropMessage;\n  };\n  FileSelectionUi.prototype.setImageNameToButton = function (imageFileName) {\n    var MAX_CHARS = 20;\n    if (imageFileName.length > MAX_CHARS) {\n      var start8Chars = imageFileName.substring(0, 8);\n      var length_1 = imageFileName.length;\n      var last8Chars = imageFileName.substring(length_1 - 8, length_1);\n      imageFileName = \"\".concat(start8Chars, \"....\").concat(last8Chars);\n    }\n    var newText = Html5QrcodeScannerStrings.fileSelectionChooseAnother() + \" - \" + imageFileName;\n    this.fileSelectionButton.innerText = newText;\n  };\n  FileSelectionUi.prototype.setInitialValueToButton = function () {\n    var initialText = Html5QrcodeScannerStrings.fileSelectionChooseImage() + \" - \" + Html5QrcodeScannerStrings.fileSelectionNoImageSelected();\n    this.fileSelectionButton.innerText = initialText;\n  };\n  FileSelectionUi.prototype.getFileScanInputId = function () {\n    return \"html5-qrcode-private-filescan-input\";\n  };\n  FileSelectionUi.create = function (parentElement, showOnRender, onFileSelected) {\n    var button = new FileSelectionUi(parentElement, showOnRender, onFileSelected);\n    return button;\n  };\n  return FileSelectionUi;\n}();\nexport { FileSelectionUi };\n//# sourceMappingURL=file-selection-ui.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}