{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srisa\\\\Downloads\\\\qr-attendance\\\\qr-attendance\\\\src\\\\components\\\\TeacherDashboard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport './TeacherDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomQRCodeWithWatermark = ({\n  value,\n  subject,\n  date,\n  time\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const qrCanvas = document.createElement('canvas');\n    const qr = new QRCodeCanvas({\n      value,\n      size: 256,\n      includeMargin: true\n    });\n    setTimeout(() => {\n      const qrElement = document.querySelector('canvas');\n      if (!qrElement) return;\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, 256, 256);\n      ctx.drawImage(qrElement, 0, 0);\n      ctx.font = 'bold 16px Arial';\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.7)';\n      ctx.textAlign = 'center';\n      ctx.fillText(subject, 128, 230);\n      ctx.fillText(date + ' ' + time, 128, 250);\n    }, 300); // Wait to let QR code render\n  }, [value, subject, date, time]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"256\",\n    height: \"256\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(CustomQRCodeWithWatermark, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CustomQRCodeWithWatermark;\nconst TeacherDashboard = () => {\n  _s2();\n  const [showQrModal, setShowQrModal] = useState(false);\n  const [teacher, setTeacher] = useState({});\n  const [sessionId, setSessionId] = useState(localStorage.getItem('activeSessionId') || null);\n  const [form, setForm] = useState({\n    className: '',\n    subject: '',\n    hour: '',\n    date: ''\n  });\n  const [students, setStudents] = useState([]);\n  const [historySessions, setHistorySessions] = useState([]);\n  const [expandedSession, setExpandedSession] = useState(null);\n  const [manualStudent, setManualStudent] = useState({\n    name: '',\n    rollNo: ''\n  });\n  const [localIP, setLocalIP] = useState('');\n  const [qrValue, setQrValue] = useState('');\n  const token = localStorage.getItem('teacherToken');\n  const handleEndSession = () => {\n    localStorage.removeItem('activeSessionId');\n    setSessionId(null);\n    setStudents([]);\n    setQrValue('');\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('teacherToken');\n    localStorage.removeItem('activeSessionId');\n    window.location.href = '/teacher-login';\n  };\n  useEffect(() => {\n    const fetchIP = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/utils/my-ip');\n        setLocalIP(res.data.ip);\n      } catch (err) {\n        console.error('Failed to fetch IP:', err);\n      }\n    };\n    fetchIP();\n  }, []);\n  useEffect(() => {\n    if (sessionId && localIP) {\n      setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\n    }\n  }, [sessionId, localIP]);\n  useEffect(() => {\n    const fetchTeacher = async () => {\n      if (!token) return;\n      try {\n        const res = await axios.get('http://localhost:5000/api/teachers/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTeacher(res.data);\n      } catch (err) {\n        console.error('Failed to fetch teacher:', err);\n      }\n    };\n    fetchTeacher();\n  }, [token]);\n  useEffect(() => {\n    if (!sessionId) return;\n    const fetchStudents = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\n        setStudents(res.data.students || []);\n      } catch (err) {\n        console.error('Error fetching students:', err);\n      }\n    };\n    fetchStudents();\n    const interval = setInterval(fetchStudents, 3000);\n    return () => clearInterval(interval);\n  }, [sessionId]);\n  useEffect(() => {\n    if (!sessionId || !localIP) return;\n    const refreshQR = async () => {\n      try {\n        await axios.put(`http://localhost:5000/api/attendance/refresh-qr/${sessionId}`);\n        setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\n      } catch (error) {\n        console.error('Failed to refresh QR code', error);\n        if (error.response && error.response.status === 404) {\n          console.log('Stale session ID detected. Clearing session.');\n          handleEndSession();\n        }\n      }\n    };\n    const interval = setInterval(refreshQR, 10000);\n    return () => clearInterval(interval);\n  }, [sessionId, localIP]);\n  useEffect(() => {\n    if (!teacher._id) return;\n    const fetchAttendanceHistory = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/attendance/teacher/${teacher._id}`);\n        setHistorySessions(res.data);\n      } catch (err) {\n        console.error('Failed to load history:', err);\n      }\n    };\n    fetchAttendanceHistory();\n  }, [teacher._id]);\n  const handleCreateSession = async () => {\n    const {\n      className,\n      subject,\n      hour,\n      date\n    } = form;\n    if (!className || !subject || !hour || !date) {\n      alert('All fields are required');\n      return;\n    }\n    if (!localIP) {\n      alert('Network IP not available yet. Please wait a moment and try again.');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/attendance/create', {\n        ...form,\n        teacherId: teacher._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const newSessionId = res.data._id;\n      setSessionId(newSessionId);\n      localStorage.setItem('activeSessionId', newSessionId);\n      setQrValue(`http://${localIP}:3000/attendance/${newSessionId}?t=${Date.now()}`);\n      setForm({\n        className: '',\n        subject: '',\n        hour: '',\n        date: ''\n      });\n    } catch (err) {\n      console.error('Session creation failed:', err);\n      alert('Failed to start session.');\n    }\n  };\n  const handleAddStudent = async () => {\n    if (!manualStudent.name || !manualStudent.rollNo) return alert('Enter all fields');\n    try {\n      await axios.post('http://localhost:5000/api/attendance/student/manual-add', {\n        sessionId,\n        name: manualStudent.name,\n        rollNo: manualStudent.rollNo\n      });\n      setManualStudent({\n        name: '',\n        rollNo: ''\n      });\n    } catch (err) {\n      console.error('Error adding student:', err);\n      alert('Failed to add student');\n    }\n  };\n  const handleDeleteStudent = async rollNo => {\n    try {\n      await axios.put(`http://localhost:5000/api/attendance/${sessionId}/remove-student`, {\n        rollNo\n      });\n      setStudents(students.filter(s => s.rollNo !== rollNo));\n    } catch (err) {\n      console.error('Error removing student:', err);\n      alert('Failed to remove student');\n    }\n  };\n  const handleDownloadCSV = session => {\n    const classInfo = `Class Name:,${session.className}\\nSubject:,${session.subject}\\nDate:,${new Date(session.date).toLocaleDateString()}\\nTime:,${new Date().toLocaleTimeString()}\\n\\n`;\n    const headers = `Name,USN\\n`;\n    const rows = session.students.map(s => `${s.name},${s.rollNo}`).join('\\n');\n    const csvContent = `${classInfo}${headers}${rows}`;\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `Attendance_${session.className}_${session.subject}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const now = new Date();\n  const formattedDate = now.toLocaleDateString();\n  const formattedTime = now.toLocaleTimeString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://d2e9h3gjmozu47.cloudfront.net/brand.png\",\n      alt: \"College Logo\",\n      className: \"college-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title heartbeat-text\",\n      children: [\"Welcome \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"teacher-name\",\n        children: (teacher.name || 'Teacher').toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), showQrModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-modal-overlay\",\n      onClick: () => setShowQrModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Scan to Mark Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), qrValue && /*#__PURE__*/_jsxDEV(CustomQRCodeWithWatermark, {\n          value: qrValue,\n          subject: form.subject || 'Subject',\n          date: formattedDate,\n          time: formattedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal-button\",\n          onClick: () => setShowQrModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"QR auto-refreshes every 10 seconds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s2(TeacherDashboard, \"l2bWlLpICVDvk8s8q41V/QBV06g=\");\n_c2 = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomQRCodeWithWatermark\");\n$RefreshReg$(_c2, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","QRCodeCanvas","jsxDEV","_jsxDEV","CustomQRCodeWithWatermark","value","subject","date","time","_s","canvasRef","qrCanvas","document","createElement","qr","size","includeMargin","setTimeout","qrElement","querySelector","ctx","current","getContext","clearRect","drawImage","font","fillStyle","textAlign","fillText","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","TeacherDashboard","_s2","showQrModal","setShowQrModal","teacher","setTeacher","sessionId","setSessionId","localStorage","getItem","form","setForm","className","hour","students","setStudents","historySessions","setHistorySessions","expandedSession","setExpandedSession","manualStudent","setManualStudent","name","rollNo","localIP","setLocalIP","qrValue","setQrValue","token","handleEndSession","removeItem","handleLogout","window","location","href","fetchIP","res","get","data","ip","err","console","error","Date","now","fetchTeacher","headers","Authorization","fetchStudents","interval","setInterval","clearInterval","refreshQR","put","response","status","log","_id","fetchAttendanceHistory","handleCreateSession","alert","post","teacherId","newSessionId","setItem","handleAddStudent","handleDeleteStudent","filter","s","handleDownloadCSV","session","classInfo","toLocaleDateString","toLocaleTimeString","rows","map","join","csvContent","blob","Blob","type","url","URL","createObjectURL","link","download","body","appendChild","click","removeChild","formattedDate","formattedTime","children","src","alt","onClick","toUpperCase","e","stopPropagation","_c2","$RefreshReg$"],"sources":["C:/Users/srisa/Downloads/qr-attendance/qr-attendance/src/components/TeacherDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { QRCodeCanvas } from 'qrcode.react';\r\nimport './TeacherDashboard.css';\r\n\r\nconst CustomQRCodeWithWatermark = ({ value, subject, date, time }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const qrCanvas = document.createElement('canvas');\r\n    const qr = new QRCodeCanvas({\r\n      value,\r\n      size: 256,\r\n      includeMargin: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const qrElement = document.querySelector('canvas');\r\n      if (!qrElement) return;\r\n\r\n      const ctx = canvasRef.current.getContext('2d');\r\n      ctx.clearRect(0, 0, 256, 256);\r\n      ctx.drawImage(qrElement, 0, 0);\r\n\r\n      ctx.font = 'bold 16px Arial';\r\n      ctx.fillStyle = 'rgba(255, 0, 0, 0.7)';\r\n      ctx.textAlign = 'center';\r\n\r\n      ctx.fillText(subject, 128, 230);\r\n      ctx.fillText(date + ' ' + time, 128, 250);\r\n    }, 300); // Wait to let QR code render\r\n  }, [value, subject, date, time]);\r\n\r\n  return <canvas ref={canvasRef} width=\"256\" height=\"256\" />;\r\n};\r\n\r\nconst TeacherDashboard = () => {\r\n  const [showQrModal, setShowQrModal] = useState(false);\r\n  const [teacher, setTeacher] = useState({});\r\n  const [sessionId, setSessionId] = useState(localStorage.getItem('activeSessionId') || null);\r\n  const [form, setForm] = useState({ className: '', subject: '', hour: '', date: '' });\r\n  const [students, setStudents] = useState([]);\r\n  const [historySessions, setHistorySessions] = useState([]);\r\n  const [expandedSession, setExpandedSession] = useState(null);\r\n  const [manualStudent, setManualStudent] = useState({ name: '', rollNo: '' });\r\n  const [localIP, setLocalIP] = useState('');\r\n  const [qrValue, setQrValue] = useState('');\r\n\r\n  const token = localStorage.getItem('teacherToken');\r\n\r\n  const handleEndSession = () => {\r\n    localStorage.removeItem('activeSessionId');\r\n    setSessionId(null);\r\n    setStudents([]);\r\n    setQrValue('');\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('teacherToken');\r\n    localStorage.removeItem('activeSessionId');\r\n    window.location.href = '/teacher-login';\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchIP = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/utils/my-ip');\r\n        setLocalIP(res.data.ip);\r\n      } catch (err) {\r\n        console.error('Failed to fetch IP:', err);\r\n      }\r\n    };\r\n    fetchIP();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sessionId && localIP) {\r\n      setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\r\n    }\r\n  }, [sessionId, localIP]);\r\n\r\n  useEffect(() => {\r\n    const fetchTeacher = async () => {\r\n      if (!token) return;\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/teachers/me', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setTeacher(res.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch teacher:', err);\r\n      }\r\n    };\r\n    fetchTeacher();\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    if (!sessionId) return;\r\n\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/attendance/${sessionId}`);\r\n        setStudents(res.data.students || []);\r\n      } catch (err) {\r\n        console.error('Error fetching students:', err);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n    const interval = setInterval(fetchStudents, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [sessionId]);\r\n\r\n  useEffect(() => {\r\n    if (!sessionId || !localIP) return;\r\n\r\n    const refreshQR = async () => {\r\n      try {\r\n        await axios.put(`http://localhost:5000/api/attendance/refresh-qr/${sessionId}`);\r\n        setQrValue(`http://${localIP}:3000/attendance/${sessionId}?t=${Date.now()}`);\r\n      } catch (error) {\r\n        console.error('Failed to refresh QR code', error);\r\n        if (error.response && error.response.status === 404) {\r\n          console.log('Stale session ID detected. Clearing session.');\r\n          handleEndSession();\r\n        }\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(refreshQR, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [sessionId, localIP]);\r\n\r\n  useEffect(() => {\r\n    if (!teacher._id) return;\r\n    const fetchAttendanceHistory = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/attendance/teacher/${teacher._id}`);\r\n        setHistorySessions(res.data);\r\n      } catch (err) {\r\n        console.error('Failed to load history:', err);\r\n      }\r\n    };\r\n    fetchAttendanceHistory();\r\n  }, [teacher._id]);\r\n\r\n  const handleCreateSession = async () => {\r\n    const { className, subject, hour, date } = form;\r\n    if (!className || !subject || !hour || !date) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n    if (!localIP) {\r\n      alert('Network IP not available yet. Please wait a moment and try again.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/attendance/create',\r\n        { ...form, teacherId: teacher._id },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      const newSessionId = res.data._id;\r\n      setSessionId(newSessionId);\r\n      localStorage.setItem('activeSessionId', newSessionId);\r\n      setQrValue(`http://${localIP}:3000/attendance/${newSessionId}?t=${Date.now()}`);\r\n      setForm({ className: '', subject: '', hour: '', date: '' });\r\n    } catch (err) {\r\n      console.error('Session creation failed:', err);\r\n      alert('Failed to start session.');\r\n    }\r\n  };\r\n\r\n  const handleAddStudent = async () => {\r\n    if (!manualStudent.name || !manualStudent.rollNo) return alert('Enter all fields');\r\n    try {\r\n      await axios.post('http://localhost:5000/api/attendance/student/manual-add', {\r\n        sessionId,\r\n        name: manualStudent.name,\r\n        rollNo: manualStudent.rollNo,\r\n      });\r\n      setManualStudent({ name: '', rollNo: '' });\r\n    } catch (err) {\r\n      console.error('Error adding student:', err);\r\n      alert('Failed to add student');\r\n    }\r\n  };\r\n\r\n  const handleDeleteStudent = async (rollNo) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/attendance/${sessionId}/remove-student`, { rollNo });\r\n      setStudents(students.filter((s) => s.rollNo !== rollNo));\r\n    } catch (err) {\r\n      console.error('Error removing student:', err);\r\n      alert('Failed to remove student');\r\n    }\r\n  };\r\n\r\n  const handleDownloadCSV = (session) => {\r\n    const classInfo = `Class Name:,${session.className}\\nSubject:,${session.subject}\\nDate:,${new Date(session.date).toLocaleDateString()}\\nTime:,${new Date().toLocaleTimeString()}\\n\\n`;\r\n    const headers = `Name,USN\\n`;\r\n    const rows = session.students.map(s => `${s.name},${s.rollNo}`).join('\\n');\r\n    const csvContent = `${classInfo}${headers}${rows}`;\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `Attendance_${session.className}_${session.subject}.csv`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const now = new Date();\r\n  const formattedDate = now.toLocaleDateString();\r\n  const formattedTime = now.toLocaleTimeString();\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <img\r\n        src=\"https://d2e9h3gjmozu47.cloudfront.net/brand.png\"\r\n        alt=\"College Logo\"\r\n        className=\"college-logo\"\r\n      />\r\n      <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n      <h1 className=\"dashboard-title heartbeat-text\">\r\n        Welcome <span className=\"teacher-name\">{(teacher.name || 'Teacher').toUpperCase()}</span>\r\n      </h1>\r\n\r\n      {/* ... existing dashboard code remains unchanged ... */}\r\n\r\n      {showQrModal && (\r\n        <div className=\"qr-modal-overlay\" onClick={() => setShowQrModal(false)}>\r\n          <div className=\"qr-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <h3 className=\"section-title\">Scan to Mark Attendance</h3>\r\n            {qrValue && (\r\n              <CustomQRCodeWithWatermark\r\n                value={qrValue}\r\n                subject={form.subject || 'Subject'}\r\n                date={formattedDate}\r\n                time={formattedTime}\r\n              />\r\n            )}\r\n            <button className=\"close-modal-button\" onClick={() => setShowQrModal(false)}>\r\n              Close\r\n            </button>\r\n            <p className=\"text-muted\"><b>QR auto-refreshes every 10 seconds</b></p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}