{"ast":null,"code":"var VideoConstraintsUtil = function () {\n  function VideoConstraintsUtil() {}\n  VideoConstraintsUtil.isMediaStreamConstraintsValid = function (videoConstraints, logger) {\n    if (typeof videoConstraints !== \"object\") {\n      var typeofVideoConstraints = typeof videoConstraints;\n      logger.logError(\"videoConstraints should be of type object, the \" + \"object passed is of type \".concat(typeofVideoConstraints, \".\"), true);\n      return false;\n    }\n    var bannedKeys = [\"autoGainControl\", \"channelCount\", \"echoCancellation\", \"latency\", \"noiseSuppression\", \"sampleRate\", \"sampleSize\", \"volume\"];\n    var bannedkeysSet = new Set(bannedKeys);\n    var keysInVideoConstraints = Object.keys(videoConstraints);\n    for (var _i = 0, keysInVideoConstraints_1 = keysInVideoConstraints; _i < keysInVideoConstraints_1.length; _i++) {\n      var key = keysInVideoConstraints_1[_i];\n      if (bannedkeysSet.has(key)) {\n        logger.logError(\"\".concat(key, \" is not supported videoConstaints.\"), true);\n        return false;\n      }\n    }\n    return true;\n  };\n  return VideoConstraintsUtil;\n}();\nexport { VideoConstraintsUtil };\n//# sourceMappingURL=utils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}